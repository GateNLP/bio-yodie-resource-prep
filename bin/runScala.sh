#!/bin/bash
#
# runScala.sh
#
# Copyright (c) 1995-2016, The University of Sheffield. See the file
# COPYRIGHT.txt in the software or at
# http://gate.ac.uk/gate/COPYRIGHT.txt
#
# This file is part of Bio-YODIE (see 
# https://gate.ac.uk/applications/bio-yodie.html), and is free 
# software, licenced under the GNU Affero General Public License
# Version 3, 19 November 2007
#
# A copy of this licence is included in the distribution in the file
# LICENSE-AGPL3.html, and is also available at
# http://www.gnu.org/licenses/agpl-3.0-standalone.html
#
# G. Gorrell, 26 September 2016

## This script can be used to run all classes except
## those which need to use the ontology plugin
## and therefore cannot have the openrdf sesame 
## jar on the system classpath.

## Scala distribution is now included inside the ./scala directory
##if [ "${SCALA_HOME}" == "" ] 
##then
##  echo Environment variable SCALA_HOME not set
##  exit 1
##fi

set -e

if [ "${GATE_HOME}" == "" ]
then
  echo Environment variable GATE_HOME not set
  exit 1
fi

class="$1"
shift

PRG="$0"
CURDIR="`pwd`"
# need this for relative symlinks
while [ -h "$PRG" ] ; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`"/$link"
  fi
done
SCRIPTDIR=`dirname "$PRG"`
SCRIPTDIR=`cd "$SCRIPTDIR"; pwd -P`
ROOTDIR=`cd "$SCRIPTDIR"/..; pwd -P`
SCALADIR=`cd "$ROOTDIR/scala/"; pwd -P`
# scala_latest_version has to be a symbolic link to the directory containing the latest scala distribution
SCALA_HOME=${SCALADIR}/scala-2.11.7

# display a useful error message if it isn't there
if ! [ -e $SCALA_HOME ]
then
  echo \"$SCALA_HOME\" should exist, and should be a symlink pointing to a directory containing the latest installed SCALA distribution
fi

# friendly remind the user to build SCALA if they have not done so (it may happen)
if ! [ -f ${SCALADIR}/prepare-scala.jar ]
then
  echo There should be a JAR file named \"prepare-scala.jar\" in \"$SCALADIR\".
  echo It is generated by running \"ant\" in that directory.
fi

#pluginsdir=`cd "$ROOTDIR"/../yodie-pipeline/plugins; pwd -P`

CONFIGFILE="$ROOTDIR"/config/config.properties

if [ "$class" ==  "" ]
then
  $SCALA_HOME/bin/scala -J-Dfile.encoding=UTF-8 -J-Dconfig=$CONFIGFILE \
-cp "$SCALADIR"/lib/'*':$SCALADIR/prepare-scala.jar:${GATE_HOME}/bin/gate.jar:${GATE_HOME}/lib/'*':${SCALA_HOME}/lib/'*'
#  $SCALA_HOME/bin/scala -J-Dfile.encoding=UTF-8 -J-Dpluginsdir=$pluginsdir -J-Dconfig=$CONFIGFILE \
#-cp "$ROOTDIR"/../yodie-preparation/lib/'*':${ROOTDIR}/../yodie-preparation/libsesame/'*':"$SCALADIR"/lib/'*':$SCALADIR/prepare-scala.jar:\
#${GATE_HOME}/bin/gate.jar:${GATE_HOME}/lib/'*':${SCALA_HOME}/lib/'*':${pluginsdir}/JdbcLookup/JdbcLookup.jar:${pluginsdir}/YodiePlugin/YodiePlugin.jar 
else
  $JAVA_HOME/bin/java $JAVA_OPTS -Dfile.encoding=UTF-8 -Dconfig=$CONFIGFILE \
-cp "$SCALADIR"/lib/'*':$SCALADIR/prepare-scala.jar:\${GATE_HOME}/bin/gate.jar:${GATE_HOME}/lib/'*':${SCALA_HOME}/lib/'*' $class  "$@"
#  $JAVA_HOME/bin/java $JAVA_OPTS -Dfile.encoding=UTF-8 -Dconfig=$CONFIGFILE -Dpluginsdir=$pluginsdir \
#-cp "$ROOTDIR"/../yodie-preparation/lib/'*':${ROOTDIR}/../yodie-preparation/libsesame/'*':"$SCALADIR"/lib/'*':$SCALADIR/prepare-scala.jar:\
#${GATE_HOME}/bin/gate.jar:${GATE_HOME}/lib/'*':${pluginsdir}/JdbcLookup/JdbcLookup.jar:${pluginsdir}/YodiePlugin/YodiePlugin.jar:${SCALA_HOME}/lib/'*' $class  "$@"
fi


